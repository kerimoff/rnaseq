/*
 * -------------------------------------------------
 *  nfcore/rnaseq Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the conf folder and imported under a profile
 * name here.
 */

// Global default params, used in configs
params {
  container = 'czbiohub/rnaseq' // Container slug. Stable releases should specify release tag!
  help = false

  // Pipeline Options
  name = false
  project = false
  aligner = 'star'
  genome = false
  forward_stranded = false
  reverse_stranded = false
  unstranded = false
  fcExtraAttributes = 'gene_name'
  splicesites = false
  saveReference = false
  saveTrimmed = false
  saveAlignedIntermediates = false
  singleEnd = false
  reads = "data/*{1,2}.fastq.gz"
  outdir = './results'
  email = false
  plaintext_email = false
  seqCenter = false
  skip_qc = false
  skip_fastqc = false
  skip_rseqc = false
  skip_genebody_coverage = false
  skip_preseq = false
  skip_dupradar = false
  skip_edger = false
  skip_multiqc = false

  run_tx_exp_quant = false
  run_txrevise = false
  run_splicing_exp_quant = false
  run_exon_quant = false

  multiqc_config = "$baseDir/assets/multiqc_config.yaml"

  // Custom LeafCutter options
  leafcutter_min_split_reads = 50 // requiring 50 split reads supporting each cluster
  leafcutter_max_intron_length = 500000 // allowing introns of up to 500kb

  // DEXSeq options
  dexseq_min_align_quality = 10 // All reads with a lower quality than specified are skipped (as given in the fifth column of the SAM file)

  // Custom trimming options
  pico = false
  five_prime_clip_r1 = 0
  five_prime_clip_r2 = 0
  three_prime_clip_r1 = 0
  three_prime_clip_r2 = 0

  // AWS Batch
  awsqueue = false
  awsregion = 'eu-west-1'

  // Defaults
  sampleLevel = false
  clusterOptions = false
  hisatBuildMemory = 200 // Required amount of memory in GB to build HISAT2 index with splice sites
  subsampFilesizeThreshold = 10000000000 // Don't subsample BAMs for RSeQC gene_body_coverage if less than this
  maxMultiqcEmailFileSize = 25.MB
  readPaths = null
  readPathsFile = null
  tracedir = "${params.outdir}/pipeline_info"
  star_memory = false // Cluster specific param required for hebbe
}

profiles {

  standard {
    includeConfig 'conf/base.config'
    includeConfig 'conf/igenomes.config'
  }
  conda { process.conda = "$baseDir/environment.yml" }
  docker { docker.enabled = true }
  singularity { singularity.enabled = true }
  czbiohub {
    includeConfig 'conf/base.config'
    includeConfig 'conf/czbiohub.config'
    includeConfig 'conf/igenomes.config'
    includeConfig 'conf/gencode.config'
  }
  czbiohub_aws {
    includeConfig 'conf/base.config'
    includeConfig 'conf/czbiohub.config'
    includeConfig 'conf/igenomes.config'
    includeConfig 'conf/gencode.config'
    includeConfig 'conf/awsbatch.config'
  }
  hebbe {
    includeConfig 'conf/base.config'
    includeConfig 'conf/hebbe.config'
  }
  uct_hex {
    includeConfig 'conf/base.config'
    includeConfig 'conf/uct_hex.config'
    includeConfig 'conf/igenomes.config'
  }
  awsbatch {
    includeConfig 'conf/base.config'
    includeConfig 'conf/awsbatch.config'
    includeConfig 'conf/igenomes.config'
  }
  binac {
    includeConfig 'conf/base.config'
    includeConfig 'conf/binac.config'
  }
  cfc {
    includeConfig 'conf/base.config'
    includeConfig 'conf/cfc.config'
  }
  ccga {
    includeConfig 'conf/base.config'
    includeConfig 'conf/ccga.config'
    includeConfig 'conf/igenomes.config'
  }
  gis {
    includeConfig 'conf/base.config'
    includeConfig 'conf/gis.config'
    includeConfig 'conf/igenomes.config'
  }
  test {
    includeConfig 'conf/base.config'
    includeConfig 'conf/test.config'
    includeConfig 'conf/igenomes.config'
  }
  tartu_hpc {
    includeConfig 'conf/base.config'
    includeConfig 'conf/igenomes.config'
    includeConfig 'conf/tartu_hpc.config'
  }
  none {
    // Don't load any config (for use with custom home configs)
  }

}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/pipeline_info/nfcore-rnaseq_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/pipeline_info/nfcore-rnaseq_report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/pipeline_info/nfcore-rnaseq_trace.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_info/nfcore-rnaseq_DAG.svg"
}

manifest {
  name = 'czbiohub/rnaseq'
  description = 'Nextflow RNA-Seq analysis pipeline, part of the czbiohub community.'
  homePage = 'https://github.com/czbiohub/rnaseq'
  author = 'Phil Ewels, Rickard HammarÃ©n'
  version = '1.2'
  mainScript = 'main.nf'
  nextflowVersion = '>=0.32.0'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
